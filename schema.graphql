type ReferralStatus @entity(immutable: false) {
  id: Bytes!
  totalUsers: Int!
  totalGroups: Int!
}

type GroupMlrtPoolStatus @entity(immutable: false) {
  id: Bytes!
  group: ReferralGroup!
  mlrt: TrackedMLRT!
  totalTvl: BigInt!
  totalAmount: BigInt!
  totalUnmintedTvl: BigInt!
  totalUnmintedMlrt: BigInt!
  accumulateEigenLayerPoints: BigInt!
  accumulateEigenpiePoints: BigInt!
  accEigenLayerPointPerShare: BigInt!
  accEigenpiePointPerShare: BigInt!
  lastUpdateTimestamp: BigInt!
}

type UserData @entity {
  id: Bytes!
  referrer: Bytes!
  referralGroup: ReferralGroup!
  referralCount: Int!
  mLrtPools: [UserPoolDepositData!]! @derivedFrom(field: "user")
  # curvePools
  # rangePools
}

type UserPoolDepositData @entity {
  id: Bytes!
  user: UserData!
  mlrt: TrackedMLRT!
  amount: BigInt!
  unmintedMlrt: BigInt!
  eigenLayerPoints: BigInt!
  eigenpiePoints: BigInt!
  eigenLayerPointsDebt: BigInt!
  eigenpiePointsDebt: BigInt!
}

type ReferralGroup @entity {
  id: Bytes!
  members: [UserData!]! @derivedFrom(field: "referralGroup")
  mlrtPoolStatus: [GroupMlrtPoolStatus!]! @derivedFrom(field: "group")
  groupTVL: BigInt!
  groupBoost: BigInt!
}

type TrackedMLRT @entity(immutable: true) {
  id: Bytes!
  underlying: Bytes!
  strategy: Bytes!
  addedTimestamp: BigInt!
}